"use strict";function requestPermission(){return new Promise(function(resolve,reject){NotificationAPI.requestPermission(function(status){("granted"===status||0===status)&&resolve(),reject(errors.DISABLED)})})}function checkPermission(){return new Promise(function(resolve,reject){if(!NotificationAPI)return reject(errors.NOT_AVAILABLE);if("permission"in NotificationAPI){switch(NotificationAPI.permission){case"granted":return resolve();case"denied":return reject(errors.DISABLED)}requestPermission().then(resolve,reject)}else if("checkPermission"in NotificationAPI)switch(NotificationAPI.checkPermission()){case 0:return resolve();case 1:requestPermission().then(resolve,reject);break;default:return reject(errors.DISABLED)}})}function notify(config){return new Promise(function(resolve,reject){return void 0===config?reject(errors.CONFIG_MISSING):"[object Object]"!==Object.prototype.toString.call(config)?reject(errors.CONFIG_TYPE):void 0===config.body?reject(errors.BODY_MISSING):"string"!=typeof config.body?reject(errors.BODY_TYPE):void 0===config.header?reject(errors.HEADER_MISSING):"string"!=typeof config.header?reject(errors.HEADER_TYPE):void 0!==config.icon&&"string"!=typeof config.icon?reject(errors.ICON_TYPE):void 0!==config.onClick&&"function"!=typeof config.onClick?reject(errors.ONCLICK_TYPE):void checkPermission().then(function(){var notification=new NotificationAPI(config.header,{body:config.body,icon:config.icon});config.onClick&&notification.addEventListener("click",config.onClick),resolve(notification)},function(error){return reject(error)})})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=notify;var errors=exports.errors={DISABLED:"UIUtils/notify: web notifications are currently disabled by user settings.",NOT_AVAILABLE:"UIUtils/notify: web notifications are not supported on this platform.",CONFIG_TYPE:"UIUtils/notify: passed a non-object as configuration.",CONFIG_MISSING:"UIUtils/notify: no configuration was passed.",BODY_TYPE:"UIUtils/notify: `body` must be a string.",BODY_MISSING:"UIUtils/notify: `body` was omitted from the configuration object.",HEADER_TYPE:"UIUtils/notify: `header` must be a string.",HEADER_MISSING:"UIUtils/notify: `header` was omitted from the configuration object.",ICON_TYPE:"UIUtils/notify: `icon` must be a URL string.",ONCLICK_TYPE:"UIUtils/notify: `onClick` must be a function."},NotificationAPI=function(){return window.Notification?window.Notification:window.webkitNotifications?window.webkitNotifications:navigator.mozNotification?navigator.mozNotification:!1}();