"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function verifyConformance(render,Constructor,baseProps,ref){var node=void 0,renderWithPropsAndGetNode=function(props){var element=render(_react2.default.createElement(Constructor,_extends({},baseProps,props)));return ref?element.refs[ref]instanceof HTMLElement?element.refs[ref]:_reactDom2.default.findDOMNode(element.refs[ref]):_reactDom2.default.findDOMNode(element)};node=renderWithPropsAndGetNode({className:"foo"}),expect(node.classList.contains("foo")).toBe(!0,Constructor.name+" does not support adding of classes via props.className"),node=renderWithPropsAndGetNode({id:"foo"}),expect("foo"===node.id).toBe(!0,Constructor.name+" does not support adding of an HTML id via props.id"),node=renderWithPropsAndGetNode({style:{color:"red"}}),expect("red"===node.style.color).toBe(!0,Constructor.name+" does not support adding inline styles via props.style"),node=renderWithPropsAndGetNode({"data-foo":"bar"}),expect("bar"===node.getAttribute("data-foo")).toBe(!0,Constructor.name+" does not support adding data attributes via props"),node=renderWithPropsAndGetNode({"aria-label":"foo"}),expect("foo"===node.getAttribute("aria-label")).toBe(!0,Constructor.name+" does not support adding aria attributes via props")}var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=verifyConformance;var _react=require("react"),_react2=_interopRequireDefault(_react),_reactDom=require("react-dom"),_reactDom2=_interopRequireDefault(_reactDom);