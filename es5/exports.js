'use strict';

/**
 * Used to create an ES5-compatible standalone build, and so it's possible to `require('enigma-uikit')``
 * and directly use a component like: `require('enigma-uikit').UIButton`
 */

global.UIKit = {};
global.UIKit.UIUtils = {};

module.exports = {
    UIArrowKeyNavigation: global.UIKit.UIArrowKeyNavigation = require('./UIArrowKeyNavigation').default,
    UIButton: global.UIKit.UIButton = require('./UIButton').default,
    UICheckbox: global.UIKit.UICheckbox = require('./UICheckbox').default,
    UICheckboxGroup: global.UIKit.UICheckboxGroup = require('./UICheckboxGroup').default,
    UIDialog: global.UIKit.UIDialog = require('./UIDialog').default,
    UIFittedText: global.UIKit.UIFittedText = require('./UIFittedText').default,
    UIImage: global.UIKit.UIImage = require('./UIImage').default,
    UIModal: global.UIKit.UIModal = require('./UIModal').default,
    UIPagination: global.UIKit.UIPagination = require('./UIPagination').default,
    UIPopover: global.UIKit.UIPopover = require('./UIPopover').default,
    UIProgress: global.UIKit.UIProgress = require('./UIProgress').default,
    UIProgressiveDisclosure: global.UIKit.UIProgressiveDisclosure = require('./UIProgressiveDisclosure').default,
    UIRadio: global.UIKit.UIRadio = require('./UIRadio').default,
    UISegmentedControl: global.UIKit.UISegmentedControl = require('./UISegmentedControl').default,
    UITable: global.UIKit.UITable = require('./UITable').default,
    UITokenizedInput: global.UIKit.UITokenizedInput = require('./UITokenizedInput').default,
    UITextualInput: global.UIKit.UITextualInput = require('./UITextualInput').default,
    UITooltip: global.UIKit.UITooltip = require('./UITooltip').default,
    UITypeaheadInput: global.UIKit.UITypeaheadInput = require('./UITypeaheadInput').default,
    UIUtils: {
        extractChildProps: global.UIKit.UIUtils.extractChildProps = require('./UIUtils/extractChildProps').default,
        notify: global.UIKit.UIUtils.notify = require('./UIUtils/notify').default,
        transformProperty: global.UIKit.UIUtils.transformProperty = require('./UIUtils/transformProperty').default,
        uuid: global.UIKit.UIUtils.uuid = require('./UIUtils/uuid').default
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2V4cG9ydHMuanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiVUlLaXQiLCJVSVV0aWxzIiwibW9kdWxlIiwiZXhwb3J0cyIsIlVJQXJyb3dLZXlOYXZpZ2F0aW9uIiwicmVxdWlyZSIsImRlZmF1bHQiLCJVSUJ1dHRvbiIsIlVJQ2hlY2tib3giLCJVSUNoZWNrYm94R3JvdXAiLCJVSURpYWxvZyIsIlVJRml0dGVkVGV4dCIsIlVJSW1hZ2UiLCJVSU1vZGFsIiwiVUlQYWdpbmF0aW9uIiwiVUlQb3BvdmVyIiwiVUlQcm9ncmVzcyIsIlVJUHJvZ3Jlc3NpdmVEaXNjbG9zdXJlIiwiVUlSYWRpbyIsIlVJU2VnbWVudGVkQ29udHJvbCIsIlVJVGFibGUiLCJVSVRva2VuaXplZElucHV0IiwiVUlUZXh0dWFsSW5wdXQiLCJVSVRvb2x0aXAiLCJVSVR5cGVhaGVhZElucHV0IiwiZXh0cmFjdENoaWxkUHJvcHMiLCJub3RpZnkiLCJ0cmFuc2Zvcm1Qcm9wZXJ0eSIsInV1aWQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBS0FBLE9BQU9DLEtBQVAsR0FBZSxFQUFmO0FBQ0FELE9BQU9DLEtBQVAsQ0FBYUMsT0FBYixHQUF1QixFQUF2Qjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQjtBQUNiQywwQkFBdUJMLE9BQU9DLEtBQVAsQ0FBYUksb0JBQWIsR0FBb0NDLFFBQVEsd0JBQVIsRUFBa0NDLE9BRGhGO0FBRWJDLGNBQVdSLE9BQU9DLEtBQVAsQ0FBYU8sUUFBYixHQUF3QkYsUUFBUSxZQUFSLEVBQXNCQyxPQUY1QztBQUdiRSxnQkFBYVQsT0FBT0MsS0FBUCxDQUFhUSxVQUFiLEdBQTBCSCxRQUFRLGNBQVIsRUFBd0JDLE9BSGxEO0FBSWJHLHFCQUFrQlYsT0FBT0MsS0FBUCxDQUFhUyxlQUFiLEdBQStCSixRQUFRLG1CQUFSLEVBQTZCQyxPQUpqRTtBQUtiSSxjQUFXWCxPQUFPQyxLQUFQLENBQWFVLFFBQWIsR0FBd0JMLFFBQVEsWUFBUixFQUFzQkMsT0FMNUM7QUFNYkssa0JBQWVaLE9BQU9DLEtBQVAsQ0FBYVcsWUFBYixHQUE0Qk4sUUFBUSxnQkFBUixFQUEwQkMsT0FOeEQ7QUFPYk0sYUFBVWIsT0FBT0MsS0FBUCxDQUFhWSxPQUFiLEdBQXVCUCxRQUFRLFdBQVIsRUFBcUJDLE9BUHpDO0FBUWJPLGFBQVVkLE9BQU9DLEtBQVAsQ0FBYWEsT0FBYixHQUF1QlIsUUFBUSxXQUFSLEVBQXFCQyxPQVJ6QztBQVNiUSxrQkFBZWYsT0FBT0MsS0FBUCxDQUFhYyxZQUFiLEdBQTRCVCxRQUFRLGdCQUFSLEVBQTBCQyxPQVR4RDtBQVViUyxlQUFZaEIsT0FBT0MsS0FBUCxDQUFhZSxTQUFiLEdBQXlCVixRQUFRLGFBQVIsRUFBdUJDLE9BVi9DO0FBV2JVLGdCQUFhakIsT0FBT0MsS0FBUCxDQUFhZ0IsVUFBYixHQUEwQlgsUUFBUSxjQUFSLEVBQXdCQyxPQVhsRDtBQVliVyw2QkFBMEJsQixPQUFPQyxLQUFQLENBQWFpQix1QkFBYixHQUF1Q1osUUFBUSwyQkFBUixFQUFxQ0MsT0FaekY7QUFhYlksYUFBVW5CLE9BQU9DLEtBQVAsQ0FBYWtCLE9BQWIsR0FBdUJiLFFBQVEsV0FBUixFQUFxQkMsT0FiekM7QUFjYmEsd0JBQXFCcEIsT0FBT0MsS0FBUCxDQUFhbUIsa0JBQWIsR0FBa0NkLFFBQVEsc0JBQVIsRUFBZ0NDLE9BZDFFO0FBZWJjLGFBQVVyQixPQUFPQyxLQUFQLENBQWFvQixPQUFiLEdBQXVCZixRQUFRLFdBQVIsRUFBcUJDLE9BZnpDO0FBZ0JiZSxzQkFBbUJ0QixPQUFPQyxLQUFQLENBQWFxQixnQkFBYixHQUFnQ2hCLFFBQVEsb0JBQVIsRUFBOEJDLE9BaEJwRTtBQWlCYmdCLG9CQUFpQnZCLE9BQU9DLEtBQVAsQ0FBYXNCLGNBQWIsR0FBOEJqQixRQUFRLGtCQUFSLEVBQTRCQyxPQWpCOUQ7QUFrQmJpQixlQUFZeEIsT0FBT0MsS0FBUCxDQUFhdUIsU0FBYixHQUF5QmxCLFFBQVEsYUFBUixFQUF1QkMsT0FsQi9DO0FBbUJia0Isc0JBQW1CekIsT0FBT0MsS0FBUCxDQUFhd0IsZ0JBQWIsR0FBZ0NuQixRQUFRLG9CQUFSLEVBQThCQyxPQW5CcEU7QUFvQmJMLGFBQVM7QUFDTHdCLDJCQUFvQjFCLE9BQU9DLEtBQVAsQ0FBYUMsT0FBYixDQUFxQndCLGlCQUFyQixHQUF5Q3BCLFFBQVEsNkJBQVIsRUFBdUNDLE9BRC9GO0FBRUxvQixnQkFBUzNCLE9BQU9DLEtBQVAsQ0FBYUMsT0FBYixDQUFxQnlCLE1BQXJCLEdBQThCckIsUUFBUSxrQkFBUixFQUE0QkMsT0FGOUQ7QUFHTHFCLDJCQUFvQjVCLE9BQU9DLEtBQVAsQ0FBYUMsT0FBYixDQUFxQjBCLGlCQUFyQixHQUF5Q3RCLFFBQVEsNkJBQVIsRUFBdUNDLE9BSC9GO0FBSUxzQixjQUFPN0IsT0FBT0MsS0FBUCxDQUFhQyxPQUFiLENBQXFCMkIsSUFBckIsR0FBNEJ2QixRQUFRLGdCQUFSLEVBQTBCQztBQUp4RDtBQXBCSSxDQUFqQiIsImZpbGUiOiJleHBvcnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2VkIHRvIGNyZWF0ZSBhbiBFUzUtY29tcGF0aWJsZSBzdGFuZGFsb25lIGJ1aWxkLCBhbmQgc28gaXQncyBwb3NzaWJsZSB0byBgcmVxdWlyZSgnZW5pZ21hLXVpa2l0JylgYFxuICogYW5kIGRpcmVjdGx5IHVzZSBhIGNvbXBvbmVudCBsaWtlOiBgcmVxdWlyZSgnZW5pZ21hLXVpa2l0JykuVUlCdXR0b25gXG4gKi9cblxuZ2xvYmFsLlVJS2l0ID0ge307XG5nbG9iYWwuVUlLaXQuVUlVdGlscyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBVSUFycm93S2V5TmF2aWdhdGlvbjogKGdsb2JhbC5VSUtpdC5VSUFycm93S2V5TmF2aWdhdGlvbiA9IHJlcXVpcmUoJy4vVUlBcnJvd0tleU5hdmlnYXRpb24nKS5kZWZhdWx0KSxcbiAgICBVSUJ1dHRvbjogKGdsb2JhbC5VSUtpdC5VSUJ1dHRvbiA9IHJlcXVpcmUoJy4vVUlCdXR0b24nKS5kZWZhdWx0KSxcbiAgICBVSUNoZWNrYm94OiAoZ2xvYmFsLlVJS2l0LlVJQ2hlY2tib3ggPSByZXF1aXJlKCcuL1VJQ2hlY2tib3gnKS5kZWZhdWx0KSxcbiAgICBVSUNoZWNrYm94R3JvdXA6IChnbG9iYWwuVUlLaXQuVUlDaGVja2JveEdyb3VwID0gcmVxdWlyZSgnLi9VSUNoZWNrYm94R3JvdXAnKS5kZWZhdWx0KSxcbiAgICBVSURpYWxvZzogKGdsb2JhbC5VSUtpdC5VSURpYWxvZyA9IHJlcXVpcmUoJy4vVUlEaWFsb2cnKS5kZWZhdWx0KSxcbiAgICBVSUZpdHRlZFRleHQ6IChnbG9iYWwuVUlLaXQuVUlGaXR0ZWRUZXh0ID0gcmVxdWlyZSgnLi9VSUZpdHRlZFRleHQnKS5kZWZhdWx0KSxcbiAgICBVSUltYWdlOiAoZ2xvYmFsLlVJS2l0LlVJSW1hZ2UgPSByZXF1aXJlKCcuL1VJSW1hZ2UnKS5kZWZhdWx0KSxcbiAgICBVSU1vZGFsOiAoZ2xvYmFsLlVJS2l0LlVJTW9kYWwgPSByZXF1aXJlKCcuL1VJTW9kYWwnKS5kZWZhdWx0KSxcbiAgICBVSVBhZ2luYXRpb246IChnbG9iYWwuVUlLaXQuVUlQYWdpbmF0aW9uID0gcmVxdWlyZSgnLi9VSVBhZ2luYXRpb24nKS5kZWZhdWx0KSxcbiAgICBVSVBvcG92ZXI6IChnbG9iYWwuVUlLaXQuVUlQb3BvdmVyID0gcmVxdWlyZSgnLi9VSVBvcG92ZXInKS5kZWZhdWx0KSxcbiAgICBVSVByb2dyZXNzOiAoZ2xvYmFsLlVJS2l0LlVJUHJvZ3Jlc3MgPSByZXF1aXJlKCcuL1VJUHJvZ3Jlc3MnKS5kZWZhdWx0KSxcbiAgICBVSVByb2dyZXNzaXZlRGlzY2xvc3VyZTogKGdsb2JhbC5VSUtpdC5VSVByb2dyZXNzaXZlRGlzY2xvc3VyZSA9IHJlcXVpcmUoJy4vVUlQcm9ncmVzc2l2ZURpc2Nsb3N1cmUnKS5kZWZhdWx0KSxcbiAgICBVSVJhZGlvOiAoZ2xvYmFsLlVJS2l0LlVJUmFkaW8gPSByZXF1aXJlKCcuL1VJUmFkaW8nKS5kZWZhdWx0KSxcbiAgICBVSVNlZ21lbnRlZENvbnRyb2w6IChnbG9iYWwuVUlLaXQuVUlTZWdtZW50ZWRDb250cm9sID0gcmVxdWlyZSgnLi9VSVNlZ21lbnRlZENvbnRyb2wnKS5kZWZhdWx0KSxcbiAgICBVSVRhYmxlOiAoZ2xvYmFsLlVJS2l0LlVJVGFibGUgPSByZXF1aXJlKCcuL1VJVGFibGUnKS5kZWZhdWx0KSxcbiAgICBVSVRva2VuaXplZElucHV0OiAoZ2xvYmFsLlVJS2l0LlVJVG9rZW5pemVkSW5wdXQgPSByZXF1aXJlKCcuL1VJVG9rZW5pemVkSW5wdXQnKS5kZWZhdWx0KSxcbiAgICBVSVRleHR1YWxJbnB1dDogKGdsb2JhbC5VSUtpdC5VSVRleHR1YWxJbnB1dCA9IHJlcXVpcmUoJy4vVUlUZXh0dWFsSW5wdXQnKS5kZWZhdWx0KSxcbiAgICBVSVRvb2x0aXA6IChnbG9iYWwuVUlLaXQuVUlUb29sdGlwID0gcmVxdWlyZSgnLi9VSVRvb2x0aXAnKS5kZWZhdWx0KSxcbiAgICBVSVR5cGVhaGVhZElucHV0OiAoZ2xvYmFsLlVJS2l0LlVJVHlwZWFoZWFkSW5wdXQgPSByZXF1aXJlKCcuL1VJVHlwZWFoZWFkSW5wdXQnKS5kZWZhdWx0KSxcbiAgICBVSVV0aWxzOiB7XG4gICAgICAgIGV4dHJhY3RDaGlsZFByb3BzOiAoZ2xvYmFsLlVJS2l0LlVJVXRpbHMuZXh0cmFjdENoaWxkUHJvcHMgPSByZXF1aXJlKCcuL1VJVXRpbHMvZXh0cmFjdENoaWxkUHJvcHMnKS5kZWZhdWx0KSxcbiAgICAgICAgbm90aWZ5OiAoZ2xvYmFsLlVJS2l0LlVJVXRpbHMubm90aWZ5ID0gcmVxdWlyZSgnLi9VSVV0aWxzL25vdGlmeScpLmRlZmF1bHQpLFxuICAgICAgICB0cmFuc2Zvcm1Qcm9wZXJ0eTogKGdsb2JhbC5VSUtpdC5VSVV0aWxzLnRyYW5zZm9ybVByb3BlcnR5ID0gcmVxdWlyZSgnLi9VSVV0aWxzL3RyYW5zZm9ybVByb3BlcnR5JykuZGVmYXVsdCksXG4gICAgICAgIHV1aWQ6IChnbG9iYWwuVUlLaXQuVUlVdGlscy51dWlkID0gcmVxdWlyZSgnLi9VSVV0aWxzL3V1aWQnKS5kZWZhdWx0KSxcbiAgICB9LFxufTtcbiJdfQ==